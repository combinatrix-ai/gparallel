name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: gparallel
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            binary_name: gparallel
            use_cross: true
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: gparallel
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: gparallel

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Install cross
      if: matrix.use_cross
      run: cargo install cross
    
    - name: Build
      run: |
        if [ "${{ matrix.use_cross }}" = "true" ]; then
          cross build --release --target ${{ matrix.target }}
        else
          cargo build --release --target ${{ matrix.target }}
        fi
    
    - name: Archive binary
      run: |
        cd target/${{ matrix.target }}/release
        tar czf ../../../${{ matrix.binary_name }}-${{ matrix.target }}.tar.gz ${{ matrix.binary_name }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.binary_name }}-${{ matrix.target }}
        path: ${{ matrix.binary_name }}-${{ matrix.target }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          gparallel-*/*.tar.gz
        draft: false
        prerelease: false
        generate_release_notes: true